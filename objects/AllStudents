package objects;

import java.util.ArrayList;

public class AllStudents {
	private ArrayList<StudentInfo> allStudents;
	private ArrayList<StudentInfo> gradeSortedStudents;
	private ArrayList<StudentInfo> nameSortedStudents;
	
	public AllStudents() {
		allStudents = new ArrayList<StudentInfo>();
		gradeSortedStudents = new ArrayList<StudentInfo>();
		nameSortedStudents = new ArrayList<StudentInfo>();
	}
	
	public void addStudent(String name, double homeworkAverage, ArrayList<Double> tests, ArrayList<Double> quizzes) {
		allStudents.add(new StudentInfo(name, homeworkAverage, tests, quizzes));
		gradeSort();
		nameSort();
	}
	
	public ArrayList<StudentInfo> getAllStudents() {
		return allStudents;
	}
	
	public ArrayList<StudentInfo> getGradeSortedStudents(){
		return gradeSortedStudents;
	}
	
	public ArrayList<StudentInfo> getNameSortedStudents(){
		return nameSortedStudents;
	}
	
	private void gradeSort(){
		gradeSortedList = allStudents;
    		int first; 
		for (int i = gradeSortedList.size() - 1; i > 0; i--) {
          		first = 0;   //initialize to subscript of first element
          		for(int j = 1; j <= i; j ++){ //locate smallest element between positions 1 and i.
               			if(gradeSortedList.get(j).getFinalAverage() < gradeSortedList.get(first).getFinalAverage())         
                 		first = j;
          		}
			Collections.swap(gradeSortedList, first, i);
     		}           
	}
	
	private void nameSort(){
		nameSortedStudents = allStudents;
		int minIndex;
		for(int i = 0; i < nameSortedStudents.size(); i++){
			minIndex = i;
			for(int j = i + 1; j < nameSortedStudents.size(); j++){
				if(nameSortedStudents.get(j).getName().compareTo(nameSortedStudents.get(minIndex).getName()) < 0) {
					minIndex = j;
				}
			}
			Collections.swap(nameSortedList, i, temp);
		}
	}
	
	public void resetAllStudents(){
		allStudents.clear();
		gradeSortedStudents.clear();
		nameSortedStudents.clear();
	}
}
